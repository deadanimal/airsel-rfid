{"version":3,"sources":["./src/app/shared/services/employee/employee.service.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;AAA2C;AACgB;AACT;AAEb;AAOrC;IAOE,yBAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QANpC,QAAG,GAAW,wEAAW,CAAC,OAAO,GAAG,cAAc,CAAC;QAEnD,OAAO;QACA,YAAO,GAAoB,EAAE,CAAC;IAGE,CAAC;IAExC,8BAAI,GAAJ,UAAK,IAAI;QACP,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAM,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC,IAAI,CAAE,0DAAG,CAAC,UAAC,GAAG;YACrD,OAAO,CAAC,GAAG,CAAC,eAAe,EAAE,GAAG,CAAC,CAAC;QACpC,CAAC,CAAC,CACH,CAAC;IACJ,CAAC;IAED,6BAAG,GAAH;QAAA,iBAOC;QANC,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAM,IAAI,CAAC,GAAG,CAAC,CAAC,IAAI,CACtC,0DAAG,CAAC,UAAC,GAAG;YACN,OAAO,CAAC,GAAG,CAAC,eAAe,EAAE,GAAG,CAAC,CAAC;YAClC,KAAI,CAAC,OAAO,GAAG,GAAG,CAAC;QACrB,CAAC,CAAC,CACH,CAAC;IACJ,CAAC;IAED,gCAAM,GAAN,UAAO,EAAU;QAAjB,iBAQC;QAPC,IAAI,KAAK,GAAG,IAAI,CAAC,GAAG,GAAG,EAAE,GAAG,GAAG,CAAC;QAChC,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAgB,KAAK,CAAC,CAAC,IAAI,CAC7C,0DAAG,CAAC,UAAC,GAAkB;YACrB,OAAO,CAAC,GAAG,CAAC,eAAe,EAAE,GAAG,CAAC,CAAC;YAClC,KAAI,CAAC,MAAM,GAAG,GAAG,CAAC;QACpB,CAAC,CAAC,CACH,CAAC;IACJ,CAAC;IAED,gCAAM,GAAN,UAAO,IAAU;QACf,OAAO,IAAI,CAAC,IAAI,CAAC,KAAK,CAAgB,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC,IAAI,CACxD,0DAAG,CAAC,UAAC,GAAG;YACN,OAAO,CAAC,GAAG,CAAC,eAAe,EAAE,GAAG,CAAC,CAAC;QACpC,CAAC,CAAC,CACH,CAAC;IACJ,CAAC;IAED,gCAAM,GAAN,UAAO,EAAU;QACf,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,GAAG,EAAE,GAAG,GAAG,CAAC,CAAC,IAAI,CAC/C,0DAAG,CAAC,UAAC,GAAG;YACN,OAAO,CAAC,GAAG,CAAC,eAAe,EAAE,GAAG,CAAC,CAAC;QACpC,CAAC,CAAC,CACH,CAAC;IACJ,CAAC;IAED,gCAAM,GAAN,UAAO,KAAa;QAClB,IAAI,SAAS,GAAG,IAAI,CAAC,GAAG,GAAG,GAAG,GAAG,KAAK,CAAC;QACvC,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAkB,SAAS,CAAC,CAAC,IAAI,CACnD,0DAAG,CAAC,UAAC,GAAG;YACN,OAAO,CAAC,GAAG,CAAC,eAAe,EAAE,GAAG,CAAC,CAAC;QACpC,CAAC,CAAC,CACH,CAAC;IACJ,CAAC;;gBAnDyB,+DAAU;;IAPzB,eAAe;QAH3B,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;+EAQ0B,+DAAU;OAPzB,eAAe,CA2D3B;IAAD,sBAAC;CAAA;AA3D2B","file":"common.js","sourcesContent":["import { Injectable } from \"@angular/core\";\nimport { environment } from \"src/environments/environment\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { Form } from \"@angular/forms\";\nimport { tap } from \"rxjs/operators\";\nimport { Observable } from \"rxjs\";\nimport { EmployeeModel } from \"./employee.model\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class EmployeeService {\n  url: string = environment.baseUrl + \"v1/employee/\";\n\n  // Data\n  public emodels: EmployeeModel[] = [];\n  public emodel: EmployeeModel;\n\n  constructor(private http: HttpClient) {}\n\n  post(body): Observable<EmployeeModel> {\n    return this.http.post<any>(this.url, body).pipe( tap((res) => {\n        console.log(\"EmployeeModel\", res);\n      })\n    );\n  }\n\n  get(): Observable<EmployeeModel[]> {\n    return this.http.get<any>(this.url).pipe(\n      tap((res) => {\n        console.log(\"EmployeeModel\", res);\n        this.emodels = res;\n      })\n    );\n  }\n\n  getOne(id: string): Observable<EmployeeModel> {\n    let urlID = this.url + id + \"/\";\n    return this.http.get<EmployeeModel>(urlID).pipe(\n      tap((res: EmployeeModel) => {\n        console.log(\"EmployeeModel\", res);\n        this.emodel = res;\n      })\n    );\n  }\n\n  update(body: Form): Observable<EmployeeModel> {\n    return this.http.patch<EmployeeModel>(this.url, body).pipe(\n      tap((res) => {\n        console.log(\"EmployeeModel\", res);\n      })\n    );\n  }\n\n  delete(id: string): Observable<any> {\n    return this.http.delete(this.url + id + \"/\").pipe(\n      tap((res) => {\n        console.log(\"EmployeeModel\", res);\n      })\n    );\n  }\n\n  filter(field: string): Observable<EmployeeModel[]> {\n    let urlFilter = this.url + \"?\" + field;\n    return this.http.get<EmployeeModel[]>(urlFilter).pipe(\n      tap((res) => {\n        console.log(\"EmployeeModel\", res);\n      })\n    );\n  }\n}\n"],"sourceRoot":"webpack:///"}